#!/bin/sh
## debug.sh for bistromathique in /home/guitta_l/projets/bistro
##
## Made by Louis GUITTARD
## Login   <guitta_l@epitech.net>
##
## Started on  Mon Oct 26 21:32:35 2015 Louis GUITTARD
## Last update Thu May 11 17:28:13 2017 James Faure
##

calcul=(
"0"
"0 + 0"
"0 + 1"
"0000001 + 0000000"
"1 + 1"
"0000005 + 0000001"
"1 + 9"
"10 + 1"
"1 + 10"
"01 + 19"
"10 + 10"
"30 + 45"
"50 + 50"
"99 + 1"
"99 + 01"
"100 + 001"
"0000010 + 0000099"
"000111 + 099999"
"1 + 1 + 1 + 1 +1+1 +1+ 1+1 +1"
"9778589565668984764687958589549897586598 + 057868958786786786775897586598 + 897587896858976598897586598 + 78957878687689897586598897586598"
"0 - 0"
"0 - 1"
"0000001 - 0000000"
"1 - 1"
"1 - 2"
"2 - 1"
"0000005 - 0000001"
"9 - 1"
"1 - 9"
"10 - 1"
"1 - 10"
"19 - 1"
"01 - 19"
"10 - 10"
"20 - 15"
"30 - 45"
"50 - 50"
"99 - 1"
"99 - 01"
"01 - 99"
"100 - 001"
"0000010 - 0000099"
"1 - 1 - 1 - 1 -1-1 -1- 1-1 -1"
"-0"
"-0 +-0"
"-0+ -1"
"-0000001 +-0000000"
"-1 + -1"
"-1 + -2"
"-2 + -1"
"-0000005 + -0000001"
"-9 + -1" "-1 + -9"
"-10 + -1"
"-1 + -10"
"-19 + -1"
"-01 + -19"
"-10 + -10"
"-20 + -15"
"-30 + -45"
"-50 + -50"
"-99 + -1"
"-99 + -01"
"-01 + -99"
"-100 + -001"
"-0000010 + -0000099"
"-1 + -1 + -1 + -1 +-1+-1 +-1+ -1+-1 +-1"
"-97476464789578958659856989897586598 + -057868958578967868897586598 + -897586509867678998897586598 + -789578897097678967868586598897586598"
"(((0)))"
"(-0) + (0)"
"(0 + -1)"
"((0000001) + -0000000)"
"(1 + 1)"
"(-1 + 2)"
"(2 + 1)"
"(-0000005 + 0000001)"
"(-9) + 1"
"1 + (9)"
"(((-10)) + ((1)))"
"(1 + 10)"
"(-19 + (1))"
"(01 + 19)"
"(10 + 10)"
"(20 + -15)"
"(30 + 45)"
"(-50 + 50)"
"(99 + 1)"
"((((99 + -01))))"
"(01 + 99)"
"(100 + 001)"
"(-0000010) + (-0000099)"
"(((1 + -1) + 1) + ((-1 +1)+1) +1+ 1+1) +(-1)"
"(-97487956576576857685764649897586598) + (-0578687896785567857669585897586598+ -89758678967867867689598897586598)+ -789578897967867768586598897586598"
"-0 - -0"
"-0 - -1"
"-0000001 - -0000000"
"-1 - -1"
"-1 - -2"
"-2 - -1"
"-0000005 - -0000001"
"-9 - -1"
"-1 - -9"
"-10 - -1"
"-1 - -10"
"-19 - -1"
"-01 - -19"
"-10 - -10"
"-20 - -15"
"-30 - -45"
"-50 - -50"
"-99 - -1"
"-99 - -01"
"-01 - -99"
"-100 - -001"
"-0000010 - -0000099"
"-1 - -1 - -1 - -1 - -1- -1 - -1- -1- -1 - -1"
"-974764649897588766767678967678966598 - -0578689986789585897685764545677586598 - -78675765768897586598897586598 - -789578897586598897586578687687678998"
"(-0) + (0)"
"(0 + -1)"
"((0000001) + -0000000)"
"(1 + 1)"
"(-1 + 2)"
"(2 + 1)"
"(-0000005 + 0000001)"
"(-9) + 1"
"1 + (9)"
"(((-10)) + ((1)))"
"(1 + 10)"
"(-19 + (1))"
"(01 + 19)"
"(10 + 10)"
"(20 + -15)"
"(30 + 45)"
"(-50 + 50)"
"(99 + 1)"
"((((99 + -01))))"
"(01 + 99)"
"(100 + 001)"
"(-0000010) + (-0000099)"
"(((1 + -1) + 1) + ((-1 +1)+1) +1+ 1+1) +(-1)"
"(-97476464989758676447685689785787009598) - (-0578689585785895897586598- -897586598677676898897586598)- -789578878765765687576897586598897586598"
"0 * 0"
"0 * 1"
"0000001 * 0000000"
"1 * 1"
"1 * 2"
"2 * 1"
"0000005 * 0000001"
"9 * 1"
"1 * 9"
"10 * 1"
"1 * 10"
"19 * 1"
"01 * 19"
"10 * 10"
"20 * 15"
"30 * 45"
"50 * 50"
"99 * 1"
"99 * 01"
"01 * 99"
"100 * 001"
"0000010 * 0000099"
"1 * 1 * 1 * 1* 1*1 *1* 1*1 *1"
"97476897585656856856685657587895578576598 * 0578685785858656557575657859579585897586598 * 8975865766776668598897586598 * 789578876744787668666576456497586598898"
"-0 * -0"
"-0 * -1"
"-0000001 * -0000000"
"-1 * -1"
"-1 * -2"
"-2 * -1"
"-0000005 * -0000001"
"-9 * -1"
"-1 * -9"
"-10 * -1"
"-1 * -10"
"-19 * -1"
"-01 * -19"
"-10 * -10"
"-20 * -15"
"-30 * -45"
"-50 * -50"
"-99 * -1"
"-99 * -01"
"-01 * -99"
"-100 * -001"
"-0000010 * -0000099"
"-1 * -1 * -1 * -1 *-1*-1 *-1* -1*-1 *-1"
"-9747689784676695685685959556558957586598 * -057868556956885575779575757895789585897586598 * -8975785856856895656588555757586598897586598 * -7895767565656565655578957557898897586598"
"(-0) * (0)"
"(0 * -1)"
"((0000001) * -0000000)"
"(1 * 1)"
"(-1 * 2)"
"(2 * 1)"
"(-0000005 * 0000001)"
"(-9) * 1"
"1 * (9)"
"(((-10)) * ((1)))"
"(1 * 10)"
"(-19 * (1))"
"(01 * 19)"
"(10 * 10)"
"(20 * -15)"
"(30 * 45)"
"(-50 * 50)"
"(99 * 1)"
"((((99 * -01))))"
"(01 * 99)"
"(100 * 001)"
"(-0000010) * (-0000099)"
"((1 * -1) + 1) * ((-1 *1)*1) *1* 1*1 *(-1)"
"(-974768975867878955787585789975598) * (-0578689755656576789585876578575585897586598* -8975865895976587575977896756557858578578578787898897586598)* -78957786789678789575878897586598"
"12 / 3"
"0 / 1"
"0000010 / 00000002"
"1 / 1"
"1 / 2"
"2 / 1"
"0000005 / 0000001"
"9 / 1"
"1 / 9"
"10 / 1"
"1  / 10"
"19 / 1"
"01 / 19"
"10 / 10"
"20 / 15"
"30 / 45"
"50 / 50"
"99 / 1"
"99 / 01"
"01 / 99"
"100 / 001"
"0000010 / 0000099"
"1 / 1 / 1 / 1 /1/1 /1/ 1/1 /1"
"9747646498974356485775478965657457648946786567557647695487686598 / 05786897857848776575785764067358465585897586598 / 8975865936342567478457476888897586598 / 789578897586598897586598"
"-12 / -3"
"-0 / -1"
"-0000010 / -00000002"
"-1 / -1"
"-1 / -2"
"-2 / -1"
"-0000005 / -0000001"
"-9 / -1"
"-1 / -9"
"-10 / -1"
"-1  / -10"
"-19 / -1"
"-01 / -19"
"-10 / -10"
"-20 / -15"
"-30 / -45"
"-50 / -50"
"-99 / -1"
"-99 / -01"
"-01 / -99"
"-100 / -001"
"-0000010 / -0000099"
"-1 / -1 / -1 / -1 /-1/-1 /-1/ -1/-1 /-1"
"-9747646498975864523678469796757650597745456486789579665956649746598 / -057868976785657657657684665657695765585897586598 / -8975785565656985695686598897586598 / -789578897586598897586598"
"(-12) / (3)"
"(0 / -1)"
"((0000010) / -00000002)"
"(1 / 1)"
"(-1 / 2)"
"(2 / 1)"
"(-0000005 / 0000001)"
"(-9) / 1"
"1 / (9)"
"(((-10)) / ((1)))"
"(1 / 10)"
"(-19 / (1))"
"(01 / 19)"
"(10 / 10)"
"(20 / -15)"
"(30 / 45)"
"(-50 / 50)"
"(99 / 1)"
"((((99 / -01))))"
"(01 / 99)"
"(100 / 001)"
"(-0000010) / (-0000099)"
"(((1 / -1) / 1) / ((-1 /1)/1) /1/ 1/1) /(-1)"
"(-9747646657685708705969875978087675650776578957895785665449897586598) / (-05786897867878565657685758776585897586598/ -8975867857657656576578558759889758)/ -789578897586598897586598"
)
ne=(
"12 % 3"
"0 % 1"
"0000010 % 00000002"
"1 % 1"
"1 % 2"
"2 % 1"
"0000005 % 0000001"
"9 % 1"
"1 % 9"
"10 % 1"
"1  % 10"
"19 % 1"
"01 % 19"
"10 % 10"
"20 % 15"
"30 % 45"
"50 % 50"
"99 % 1"
"99 % 01"
"01 % 99"
"100 % 001"
"0000010 % 0000099"
"1 % 1 % 1 % 1 %1%1 %1% 1%1 %1"
"974764656768456789896746565864564756345453538766949646977649897586598 % 057868876764766478657857656875679585897586598 % 89758687576476567447874598897586598 % 789578897586598897586598"
"-12 % -3"
"-0 % -1"
"-0000010 % -00000002"
"-1 % -1"
"-1 % -2"
"-2 % -1"
"-0000005 % -0000001"
"-9 % -1"
"-1 % -9"
"-10 % -1"
"-1  % -10"
"-19 % -1"
"-01 % -19"
"-10 % -10"
"-20 % -15"
"-30 % -45"
"-50 % -50"
"-99 % -1"
"-99 % -01"
"-01 % -99"
"-100 % -001"
"-0000010 % -0000099"
"-1 % -1 % -1 % -1 %-1%-1 %-1% -1%-1 %-1"
"974764649897586598 % -0578689585897586598 % -897586598897586598 % -789578897586598897586598"
"(-0) / (3)"
"(0 / -1)"
"((0000001) / -0000001)"
"(1 / 1)"
"(-1 / 2)"
"(2 / 1)"
"(-0000005 / 0000001)"
"(-9) / 1"
"1 / (9)"
"(((-10)) / ((1)))"
"(1 / 10)"
"(-19 / (1))"
"(01 / 19)"
"(10 / 10)"
"(20 / -15)"
"(30 / 45)"
"(-50 / 50)"
"(99 / 1)"
"((((99 / -01))))"
"(01 / 99)"
"(100 / 001)"
"(-0000010) / (-0000099)"
"(((1 / -1) / 1) / ((-1 /1)/1) /1/ 1/1) /(-1)"
"(-974764649897586598) % (-0578689585897586598% -897586598897586598)% -789578897586598897586598"
"0 +0* 0 -0/ 1 %1* 0%1 - 0"
"1 +1* 1 -1/ 1 %1* 1%1 - 1"
"10 +5* 3 -12/ 3 %14* 70%13 - 31"
"100 +3* 45 -802/ 12 %2* 10%4 - 542"
"54854434 +600* 56 -8190233/ 143 %729* 12%8 - 636521"
"74584584584584584-585636345234533634*745747647684764/784874*8537358479647684684687464784686746%68764768764748679+6576847476786"
"-0+-0*-0- -0/-1%-1*-0%-1- -0"
"-1+-1*-1- -1/-1%-1*-1%-1- -1"
"-10+-5*-3- -12/-3%-14*-70%-13- -31"
"-100+-3*-45- -802/-12%-2*-10%-4- -542"
"-54854434+-600*-56- -8190233/-143%-729*-12%-8- -636521"
"-74584584584584584- -585636345234533634*-745747647684764/784874*-8537358479647684684687464784686746%-68764768764748679+-6576847476786"
"((((-0)+-0*(-0- -0/-1)%-1*-0%(-1)- -0)))"
"((((((((((((((-10)+-5*(3- -12/3)%(-14*70%(-13)- -31))))))))))))))"
"((((-100)+-3*(45- -802/12)%(-2*10%(-4)- -542))))"
"((((-54854434)+-600*(-56- -8190233/-143)%(-729*(-12)%-8- -636521))))"
"((((-74584584584584584)- -585636345234533634*(-745747647684764/784874*-8537358479647684684687464784686746)%-68764768764748679))+-6576847476786)"
)
nb_calc=379
PROB=0
digits="0123456789"
operators="+-*/%"

GREEN_H="\\033[32;7m"
GREEN=$'\e[32m'
GREEN_RES="\\033[32m"
RED="\\033[31;5m"
RED_RES="\\033[31m"
BLUE="\\033[34m"
NORMAL="\\033[m"

echo ------------------
for c in $(seq ${#calcul[*]})
do
    echo $(echo "${calcul[c]}" | ./calc "0123456789" "()+-*/%" "${#calcul[c]}") > debug1
    echo $(echo "${calcul[c]}" | bc) | sed 's/[\\ ]//g' > debug2
    diff -s debug1 debug2 > /dev/null ; echo $? > store
    if [ $(cat store) != 0 ]
    then
        echo -e "${RED}ERROR${NORMAL}   ==>[ ${calcul[c]} ]<=="
	echo -e "${RED_RES} $(diff -s debug1 debug2 | cat)${NORMAL}"
	(( PROB++ ))
    else
	echo -n -e "${GREEN}OK${NORMAL}	${calcul[c]} = "
        echo -e "${GREEN_RES}$(echo $(echo "${calcul[c]}" | bc) | sed 's/[\\ ]//g')${NORMAL}"
    fi
done
echo -e "\n ${BLUE}Bug(s) restant(s) : ${PROB}${NORMAL}\n"
echo ------------------

rm -rf debug1
rm -rf debug2
rm -rf store
